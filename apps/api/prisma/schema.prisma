generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  profile   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String?  @unique
  hash      String?
  status    String?

  podcasts PodcastAnchor[]
  posts    Post[]

  @@map("Users")
}

model Podcast {
  id        Int             @id @default(autoincrement())
  title     String
  showNote  String?         @db.Text
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  anchors   PodcastAnchor[]
  tags      PodcastTag[]

  @@map("Podcasts")
}

model Post {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  title     String
  authorId  Int
  author    User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  content   String?   @db.Text
  tags      PostTag[]

  @@map("Posts")
}

enum PodcastIdentity {
  Host
  Guest
}

model PodcastAnchor {
  podcastId Int
  podcast   Podcast         @relation(fields: [podcastId], references: [id], onDelete: Cascade)
  anchorId  Int
  anchor    User            @relation(fields: [anchorId], references: [id], onDelete: Cascade)
  identity  PodcastIdentity
  adjective String?

  @@id([podcastId, anchorId])
  @@map("PodcastAnchors")
}

model Tag {
  id        Int          @id @default(autoincrement())
  name      String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  podcasts  PodcastTag[]
  posts     PostTag[]

  @@map("Tags")
}

model PodcastTag {
  podcastId Int
  podcast   Podcast  @relation(fields: [podcastId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  tagId     Int
  tag       Tag      @relation(fields: [tagId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  assigndAt DateTime @default(now())

  @@id([podcastId, tagId])
  @@map("PodcastTags")
}

model PostTag {
  postId Int
  post   Post @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  tagId  Int
  tag    Tag  @relation(fields: [tagId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([postId, tagId])
  @@map("PostTags")
}
